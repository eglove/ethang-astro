---
import Layout from '../../../layouts/Layout.astro';
---

<Layout title="A Frontend Masters Review" description="A review of Frontend Masters courses for learning web development.">
    <main>
        <article>
            <header><h1>A Frontend Masters Review</h1></header>
            <p>
                I'm always looking for the next set of courses to take. Looking to
                refine
                <a href="../../courses/">the recommended courses</a> and learn
                something myself. Frontend Masters is a site I've always avoided for
                two reasons. It seems to be frontend only, and the lecture style of
                the videos makes it seem more like a recorded coding bootcamp. But
                this is far from the case, and I wish I tried it sooner.
            </p>
            <p>
                Instructors like Will Sentance, Maximiliano Firtman, Kyle Simpson
                <a target="_blank" href="https://frontendmasters.com/teachers/"
                >and others</a
                >
                have inspired me to not just completely redo this site, but shift my
                thinking entirely about working with the web. I've always said I
                appreciate working with web standards first, but what I was talking
                about is frameworks like Remix or QwikCity using these magical,
                unapproachable things called service workers.
            </p>
            <p>
                Instead, I've realized that a service worker seems just as easy to
                work with as React Query. I have another article on mixing service
                worker caching with fetch invalidation.
            </p>
            <p>
                I've learned that my thinking around web components was all wrong. I
                was focused on the fact that they aren't compatible with SSR, didn't
                stop to realize that what they provide is closures for HTML. I have an
                article planned on explaining my thinking around this as well.
            </p>
            <p>
                I've learned to think of JavaScript as the event driven language it
                is. We can take advantage of JavaScript's event loop and think in a
                system of three queues to get a lot of power out of it. Web workers
                are very easy to write, and multithreaded JavaScript is as simple as
                worker.postMessage('start').
            </p>
            <p>
                Frameworks are getting more and more complex to try to be more
                performant, or to try to get closer to "web standards." But it turns
                out, there's a framework that does this better than all of them. The
                browser. All these frameworks meant to make everything easier, and
                I've realized they've only made things more difficult and less
                peformant. I have an article planned to talk about why you don't need
                a frontend framework.
            </p>
            <p>
                That is a lot of inspiration from a single site. I will admit that
                many years ago I would have been very board with this content. When I
                was in college, for example, I would have hated Frontend Masters. I
                would have preferred to just learn how to build an app. Who cares that
                document is not a part of JavaScript? Why should I need to know how to
                write a service worker? That's such a niche problem.
            </p>
            <p>
                But as I've gotten familiar with building applications, I'm less
                interested in learning how to do so in yet another language, yet
                another framework.
            </p>
            <p>
                So Frontend Masters deeper dives, and topics around actual web
                standards really grabbed my interest. And the quality of the courses
                is above and beyond.
            </p>
            <p>
                When I restructured the recommended courses recently, I organized
                sources into categories. Learn basic programming with Colt Steele,
                learn to build with Academind, learn algorithms with AlgoExpert, and
                learn the web with frontend masters.
            </p>
            <p>
                For anyone that's bored with the code alongs, tired of the algorithms,
                and not seeing picking up yet another framework as a reasonable next
                step, I can't recommend
                <a target="_blank" href="https://frontendmasters.com/"
                >Frontend Masters</a
                >
                enough.
            </p>
        </article>
    </main>
</Layout>

